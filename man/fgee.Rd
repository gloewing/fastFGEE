% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fgee.R
\name{fgee}
\alias{fgee}
\title{Estimate parameters using one-step algorithm}
\usage{
fgee(
  formula,
  data,
  cluster,
  family,
  cov.type = c("exchangeable", "ar1", "independence"),
  time = NULL,
  long.dir = TRUE,
  sandwich = TRUE,
  pffr.mod = NULL,
  knots = NULL,
  bs = "bs",
  cv = "fastkfold",
  cv.grid = NULL,
  exact = FALSE,
  rho.smooth = FALSE,
  joint.CI = TRUE,
  return.early = FALSE,
  V.inv = NULL,
  ...
)
}
\arguments{
\item{formula}{an object of class "formula": a symbolic description of the model to be fitted.}

\item{data}{a required data frame or data.table containing the variables in the model.}

\item{cluster}{the name of the field that identifies the clusters.}

\item{family}{the distribution family: gaussian, binomial, and poisson}

\item{cov.type}{working correlation can be "exchangeable", "ar1", or "independence. "ar1" only supported for even grids (contact package author if you need an implementation for uneven grids!)}

\item{time}{variable name for the time variable (necessary only for "ar1").}

\item{long.dir}{Logical. Defaults to \code{TRUE}, which models correlation in the longitudinal direction with the specified correlation above (cov.type). \code{TRUE} models correlation along the functional domain with an ar1 structure}

\item{sandwich}{Specifies the variance estimator. Set to "fastBoot" for fast cluster bootstrapping, or "boot" for standard cluster bootstrapping.}

\item{pffr.mod}{Instead of specifying the formula above, one can instead fit a refund::pffr() model and feed in the model object to provide the initial fit.}

\item{knots}{Number of knots used for initial pffr fit. Default to round(L/4) where L is the number of functional domain points.}

\item{bs}{Spline basis type used.}

\item{cv}{Cross-validation type. Defaults to cluster "fastkfold" but can also use "kfold" for standard cluster CV, or TRUE for hold-one-cluster-out CV.}

\item{cv.grid}{A list of vectors, where each vector is a grid to sequentially tune on. Default uses a list of three lists to tune over, which seems to work well in practice.}

\item{exact}{Defaults to FALSE. For continuous outcomes, setting \code{exact=TRUE} uses the closed-form expression (a penalized weighted-least squares) instead of the closely-related one-step estimator.}

\item{joint.CI}{Defaults to TRUE which uses a parameteric bootstrap. For a non-parametric bootstrap, set \code{joint.CI = "np"}.}

\item{return.early}{Defaults to FALSE. Calculates one-step components and returns them before parameter tuning or one-step update.}

\item{V.inv}{Defaults to NULL. This is an optional inverse-covariance matrix (of dimension Ln_i x Ln_i) to be used instead of the working correlations above. Experimental feature that assumes fixed sample size across subjects. Contact package authors if you need this feature.}

\item{...}{currently disregarded}

\item{rhoSmooth}{Defaults to FALSE Determines wheter the pointwise correlation parameter estimates are smoothed across the functional domain.}
}
\value{
A "fgee1step" object. \code{model} is the updated one-step model object, so mgcv::plot.gam() can be applied to this object. \code{pffr_initial.fit} contains the initial fit refund::pffr object.
\code{vb} contains the variance/covariance matrix for the coefficient estimates (sandwich or bootstrap-based). \code{qn} contains the joint CI quantiles. \code{di} and \code{wi} are lists of length N, with the updated cluster-specific estimating equation and hessian terms (without the penalty).
}
\description{
Estimate parameters using one-step algorithm
}
\examples{
library(fastFGEE)
data("DTI", package = "refund")
set.seed(1)
DTI_use <- DTI[DTI$ID \%in\% sample(DTI$ID, 45),]
DTI_use <- data.frame(cca = I(DTI_use$cca),
                      case = DTI_use$case, visit = 1*(DTI_use$visit),
                      sex = DTI_use$sex,
                      ID = DTI_use$ID)
 fit_dti <- fastFGEE::fgee(formula = cca ~ case + visit,
                           cluster = "ID",
                           data = DTI_use,
                           family = "gaussian",
                           cov.type = "exchangeable")
 fastFGEE::fgee.plot(fit_dti)
 plot(fit_dti$model)
}
\references{
Loewinger, G., Levis, A., Cui, E., Pereira, F. (2025). Fast Functional Generalized Estimating Equations for
Longitudinal Functional Data at Scale.
}
\author{
Gabriel Loewinger \email{gloewinger@gmail.com}
}
